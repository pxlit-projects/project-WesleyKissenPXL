{"ast":null,"code":"import _asyncToGenerator from \"C:/School/PXL/2024-2025/Fullstack Java/Opdracht/Code/project-WesleyKissenPXL/frontend-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed } from '@angular/core/testing';\nimport { ConceptComponent } from './../concepts.component';\nimport { Router } from '@angular/router';\nimport { PostService } from '@services/post-service.service';\ndescribe('ConceptComponent', () => {\n  let component;\n  let fixture;\n  let postService;\n  let router;\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    const postServiceSpy = jasmine.createSpyObj('PostService', ['getConceptPosts']);\n    const routerSpy = jasmine.createSpyObj('Router', ['navigate']);\n    yield TestBed.configureTestingModule({\n      declarations: [ConceptComponent],\n      providers: [{\n        provide: PostService,\n        useValue: postServiceSpy\n      }, {\n        provide: Router,\n        useValue: routerSpy\n      }]\n    }).compileComponents();\n    fixture = TestBed.createComponent(ConceptComponent);\n    component = fixture.componentInstance;\n    postService = TestBed.inject(PostService);\n    router = TestBed.inject(Router);\n    fixture.detectChanges();\n  }));\n});","map":{"version":3,"names":["TestBed","ConceptComponent","Router","PostService","describe","component","fixture","postService","router","beforeEach","_asyncToGenerator","postServiceSpy","jasmine","createSpyObj","routerSpy","configureTestingModule","declarations","providers","provide","useValue","compileComponents","createComponent","componentInstance","inject","detectChanges"],"sources":["C:\\School\\PXL\\2024-2025\\Fullstack Java\\Opdracht\\Code\\project-WesleyKissenPXL\\frontend-web\\src\\app\\conceptsPage\\editconcept\\edit-concept.component.spec.ts"],"sourcesContent":["import { TestBed, ComponentFixture, fakeAsync, tick } from '@angular/core/testing';\r\nimport { ConceptComponent } from './../concepts.component';\r\nimport { Router } from '@angular/router';\r\nimport { PostService } from '@services/post-service.service';\r\nimport { of, throwError } from 'rxjs';\r\nimport { By } from '@angular/platform-browser';\r\n\r\ndescribe('ConceptComponent', () => {\r\n  let component: ConceptComponent;\r\n  let fixture: ComponentFixture<ConceptComponent>;\r\n  let postService: jasmine.SpyObj<PostService>;\r\n  let router: jasmine.SpyObj<Router>;\r\n\r\n  beforeEach(async () => {\r\n    const postServiceSpy = jasmine.createSpyObj('PostService', ['getConceptPosts']);\r\n    const routerSpy = jasmine.createSpyObj('Router', ['navigate']);\r\n\r\n    await TestBed.configureTestingModule({\r\n      declarations: [ConceptComponent],\r\n      providers: [\r\n        { provide: PostService, useValue: postServiceSpy },\r\n        { provide: Router, useValue: routerSpy },\r\n      ]\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(ConceptComponent);\r\n    component = fixture.componentInstance;\r\n    postService = TestBed.inject(PostService) as jasmine.SpyObj<PostService>;\r\n    router = TestBed.inject(Router) as jasmine.SpyObj<Router>;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  \r\n});"],"mappings":";AAAA,SAASA,OAAO,QAA2C,uBAAuB;AAClF,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,gCAAgC;AAI5DC,QAAQ,CAAC,kBAAkB,EAAE,MAAK;EAChC,IAAIC,SAA2B;EAC/B,IAAIC,OAA2C;EAC/C,IAAIC,WAAwC;EAC5C,IAAIC,MAA8B;EAElCC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMC,cAAc,GAAGC,OAAO,CAACC,YAAY,CAAC,aAAa,EAAE,CAAC,iBAAiB,CAAC,CAAC;IAC/E,MAAMC,SAAS,GAAGF,OAAO,CAACC,YAAY,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,CAAC;IAE9D,MAAMb,OAAO,CAACe,sBAAsB,CAAC;MACnCC,YAAY,EAAE,CAACf,gBAAgB,CAAC;MAChCgB,SAAS,EAAE,CACT;QAAEC,OAAO,EAAEf,WAAW;QAAEgB,QAAQ,EAAER;MAAc,CAAE,EAClD;QAAEO,OAAO,EAAEhB,MAAM;QAAEiB,QAAQ,EAAEL;MAAS,CAAE;KAE3C,CAAC,CAACM,iBAAiB,EAAE;IAEtBd,OAAO,GAAGN,OAAO,CAACqB,eAAe,CAACpB,gBAAgB,CAAC;IACnDI,SAAS,GAAGC,OAAO,CAACgB,iBAAiB;IACrCf,WAAW,GAAGP,OAAO,CAACuB,MAAM,CAACpB,WAAW,CAAgC;IACxEK,MAAM,GAAGR,OAAO,CAACuB,MAAM,CAACrB,MAAM,CAA2B;IACzDI,OAAO,CAACkB,aAAa,EAAE;EACzB,CAAC,EAAC;AAGJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}