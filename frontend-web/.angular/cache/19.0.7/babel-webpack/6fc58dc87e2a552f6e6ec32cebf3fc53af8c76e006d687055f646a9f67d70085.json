{"ast":null,"code":"import _asyncToGenerator from \"C:/School/PXL/2024-2025/Fullstack Java/Opdracht/Code/project-WesleyKissenPXL/frontend-web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { TestBed, fakeAsync, tick } from '@angular/core/testing';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CreatePostComponent } from './../core/posts/create-post/create-post.component';\ndescribe('CreatePostComponent', () => {\n  let component;\n  let fixture;\n  beforeEach(/*#__PURE__*/_asyncToGenerator(function* () {\n    yield TestBed.configureTestingModule({\n      declarations: [CreatePostComponent],\n      imports: [ReactiveFormsModule]\n    }).compileComponents();\n    fixture = TestBed.createComponent(CreatePostComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  }));\n  it('should create the component', () => {\n    expect(component).toBeTruthy();\n  });\n  it('should emit createPost event on form submit', fakeAsync(() => {\n    // Arrange\n    spyOn(component.createPost, 'emit');\n    component.postForm.setValue({\n      title: 'Test Title',\n      content: 'Test Content',\n      author: 'Test Author'\n    });\n    // Act\n    component.onSubmit();\n    tick(); // Simulate async passage of time\n    // Assert\n    expect(component.createPost.emit).toHaveBeenCalledWith({\n      title: 'Test Title',\n      content: 'Test Content',\n      author: 'Test Author'\n    });\n  }));\n  it('should emit createConceptPost event when adding as concept', fakeAsync(() => {\n    // Arrange\n    spyOn(component.createConceptPost, 'emit');\n    component.postForm.setValue({\n      title: 'Concept Title',\n      content: 'Concept Content',\n      author: 'Concept Author'\n    });\n    // Act\n    component.addAsConcept();\n    tick(); // Simulate async passage of time\n    // Assert\n    expect(component.createConceptPost.emit).toHaveBeenCalledWith({\n      title: 'Concept Title',\n      content: 'Concept Content',\n      author: 'Concept Author'\n    });\n  }));\n});","map":{"version":3,"names":["TestBed","fakeAsync","tick","ReactiveFormsModule","CreatePostComponent","describe","component","fixture","beforeEach","_asyncToGenerator","configureTestingModule","declarations","imports","compileComponents","createComponent","componentInstance","detectChanges","it","expect","toBeTruthy","spyOn","createPost","postForm","setValue","title","content","author","onSubmit","emit","toHaveBeenCalledWith","createConceptPost","addAsConcept"],"sources":["C:\\School\\PXL\\2024-2025\\Fullstack Java\\Opdracht\\Code\\project-WesleyKissenPXL\\frontend-web\\src\\app\\conceptsPage\\concepts.components.spec.ts"],"sourcesContent":["import { TestBed, ComponentFixture, fakeAsync, tick } from '@angular/core/testing';\r\nimport { ReactiveFormsModule, FormBuilder } from '@angular/forms';\r\nimport { CreatePostComponent } from './../core/posts/create-post/create-post.component';\r\nimport { PostRequest } from '@models/postRequest.model';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { By } from '@angular/platform-browser';\r\n\r\ndescribe('CreatePostComponent', () => {\r\n  let component: CreatePostComponent;\r\n  let fixture: ComponentFixture<CreatePostComponent>;\r\n\r\n  beforeEach(async () => {\r\n    await TestBed.configureTestingModule({\r\n      declarations: [CreatePostComponent],\r\n      imports: [ReactiveFormsModule],\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(CreatePostComponent);\r\n    component = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  it('should create the component', () => {\r\n    expect(component).toBeTruthy();\r\n  });\r\n\r\n  it('should emit createPost event on form submit', fakeAsync(() => {\r\n    // Arrange\r\n    spyOn(component.createPost, 'emit');\r\n    component.postForm.setValue({\r\n      title: 'Test Title',\r\n      content: 'Test Content',\r\n      author: 'Test Author',\r\n    });\r\n\r\n    // Act\r\n    component.onSubmit();\r\n    tick();  // Simulate async passage of time\r\n\r\n    // Assert\r\n    expect(component.createPost.emit).toHaveBeenCalledWith({\r\n      title: 'Test Title',\r\n      content: 'Test Content',\r\n      author: 'Test Author',\r\n    });\r\n  }));\r\n\r\n  it('should emit createConceptPost event when adding as concept', fakeAsync(() => {\r\n    // Arrange\r\n    spyOn(component.createConceptPost, 'emit');\r\n    component.postForm.setValue({\r\n      title: 'Concept Title',\r\n      content: 'Concept Content',\r\n      author: 'Concept Author',\r\n    });\r\n\r\n    // Act\r\n    component.addAsConcept();\r\n    tick();  // Simulate async passage of time\r\n\r\n    // Assert\r\n    expect(component.createConceptPost.emit).toHaveBeenCalledWith({\r\n      title: 'Concept Title',\r\n      content: 'Concept Content',\r\n      author: 'Concept Author',\r\n    });\r\n  }));\r\n\r\n  \r\n});"],"mappings":";AAAA,SAASA,OAAO,EAAoBC,SAAS,EAAEC,IAAI,QAAQ,uBAAuB;AAClF,SAASC,mBAAmB,QAAqB,gBAAgB;AACjE,SAASC,mBAAmB,QAAQ,mDAAmD;AAKvFC,QAAQ,CAAC,qBAAqB,EAAE,MAAK;EACnC,IAAIC,SAA8B;EAClC,IAAIC,OAA8C;EAElDC,UAAU,cAAAC,iBAAA,CAAC,aAAW;IACpB,MAAMT,OAAO,CAACU,sBAAsB,CAAC;MACnCC,YAAY,EAAE,CAACP,mBAAmB,CAAC;MACnCQ,OAAO,EAAE,CAACT,mBAAmB;KAC9B,CAAC,CAACU,iBAAiB,EAAE;IAEtBN,OAAO,GAAGP,OAAO,CAACc,eAAe,CAACV,mBAAmB,CAAC;IACtDE,SAAS,GAAGC,OAAO,CAACQ,iBAAiB;IACrCR,OAAO,CAACS,aAAa,EAAE;EACzB,CAAC,EAAC;EAEFC,EAAE,CAAC,6BAA6B,EAAE,MAAK;IACrCC,MAAM,CAACZ,SAAS,CAAC,CAACa,UAAU,EAAE;EAChC,CAAC,CAAC;EAEFF,EAAE,CAAC,6CAA6C,EAAEhB,SAAS,CAAC,MAAK;IAC/D;IACAmB,KAAK,CAACd,SAAS,CAACe,UAAU,EAAE,MAAM,CAAC;IACnCf,SAAS,CAACgB,QAAQ,CAACC,QAAQ,CAAC;MAC1BC,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE;KACT,CAAC;IAEF;IACApB,SAAS,CAACqB,QAAQ,EAAE;IACpBzB,IAAI,EAAE,CAAC,CAAE;IAET;IACAgB,MAAM,CAACZ,SAAS,CAACe,UAAU,CAACO,IAAI,CAAC,CAACC,oBAAoB,CAAC;MACrDL,KAAK,EAAE,YAAY;MACnBC,OAAO,EAAE,cAAc;MACvBC,MAAM,EAAE;KACT,CAAC;EACJ,CAAC,CAAC,CAAC;EAEHT,EAAE,CAAC,4DAA4D,EAAEhB,SAAS,CAAC,MAAK;IAC9E;IACAmB,KAAK,CAACd,SAAS,CAACwB,iBAAiB,EAAE,MAAM,CAAC;IAC1CxB,SAAS,CAACgB,QAAQ,CAACC,QAAQ,CAAC;MAC1BC,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE,iBAAiB;MAC1BC,MAAM,EAAE;KACT,CAAC;IAEF;IACApB,SAAS,CAACyB,YAAY,EAAE;IACxB7B,IAAI,EAAE,CAAC,CAAE;IAET;IACAgB,MAAM,CAACZ,SAAS,CAACwB,iBAAiB,CAACF,IAAI,CAAC,CAACC,oBAAoB,CAAC;MAC5DL,KAAK,EAAE,eAAe;MACtBC,OAAO,EAAE,iBAAiB;MAC1BC,MAAM,EAAE;KACT,CAAC;EACJ,CAAC,CAAC,CAAC;AAGL,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}